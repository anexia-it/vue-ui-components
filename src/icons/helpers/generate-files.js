/* eslint-disable @typescript-eslint/no-var-requires */
console.log("Auto generating files for AnxIcons");

const fs = require("fs");
const path = require("path");
const sutils = require("./string-utils");
const __PATH__ = "src/icons/";
const __ICONS_PATH__ = "src/assets/icons";

const fileTitle = `// --- BEGIN AUTO-GENERATED FILE ---
//
// This file is auto generated on each build. Do not edit this file!
// Run the necessary scripts defined in package.json to generate this file.\n\n`;

const fileFooter = `\n\n// --- END AUTO-GENERATED FILE ---\n`;

/** Generates the content for the plugins.js file */
function generatePluginsFileContent(icons) {
  let content = fileTitle;

  content += `import Vue from "vue";\n\nimport {\n`;

  icons.forEach(({ fullName }) => {
    content += `  ${fullName},\n`;
  });
  content = content.slice(0, -2);

  content += `\n} from "./icons";\n\n`;

  content += `export const AnxIconsNames = [\n`;

  icons.forEach(({ fullName }) => {
    content += `  "${fullName}",\n`;
  });
  content = content.slice(0, -2);

  content += `\n];\n\nexport const AnxIconsPlugin = {
  install: function() {
    // TODO: implement install logic here
    console.log("installing AnxIconsPlugin");
    Vue.component("AnxIconEuro", AnxIconEuro);
  }\n};`;

  content += fileFooter;

  return content;
}

function generateIconsFile(icons) {
  let content = fileTitle;

  content += `import { makeIcon } from "./helpers/make-icon";\n\n`;

  icons.forEach(({ name, fullName, svg }) => {
    content += `export const ${fullName} = makeIcon(\n  "${name}",\n  "${svg}"\n);\n\n`;
  });
  content = content.slice(0, -2);

  content += fileFooter;

  return content;
}

/** Generates a file with the given content */
function generateFile(name, content) {
  fs.writeFile(path.join(__PATH__, name), content, () => {
    console.log(`Generated ${name}`);
  });
}

/** Get all the names of the icons from the files located in de icons folder */
fs.readdir(__ICONS_PATH__, (err, files) => {
  if (err) {
    console.error("Error reading icon files directory!");
  } else {
    const icons = [];
    files.forEach(file => {
      /** Camelize the file name */
      let name = sutils.camelize(file);

      /** Check if the file is svg */
      const fileType = name.split(".")[1];
      if (fileType === "svg") {
        /** Remove the file extension */
        name = name.split(".")[0];

        /** Add the AnxIcon prefix */
        const fullName = "AnxIcon" + name;

        /** Add the original and modified file names to the array */
        icons.push({
          original: file,
          fullName: fullName,
          name: name, // TODO: add svg automatically
          svg: "<defs><style>  .cls-1 {	fill: none;	stroke: #77bc1f;	stroke-miterlimit: 10;	stroke-width: 7.5px;  }</style></defs><title>073-Euro</title><g><circle class='cls-1' cx='129' cy='129' r='125'/><g>  <line class='cls-1' x1='59.62' y1='113.75' x2='143.14' y2='113.75'/>  <line class='cls-1' x1='59.62' y1='140.43' x2='143.14' y2='140.43'/>  <path class='cls-1' d='M167.44,70.58a63.62,63.62,0,1,0,0,116.86'/></g></g>"
        });
      }
    });

    /** Generate the plugins.js file */
    const pluginsJsFile = generatePluginsFileContent(icons);
    generateFile("plugin.js", pluginsJsFile);

    /** Generate the icons.js file */
    const iconsJsFile = generateIconsFile(icons);
    generateFile("icons.js", iconsJsFile);
  }
});
